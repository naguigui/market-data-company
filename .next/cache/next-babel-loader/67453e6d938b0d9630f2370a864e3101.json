{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Landing, Research, WhitePaper, CaseStudies, Survey } from '../sections/research-section';\nimport { Layout, ContactFooter, ResearchPdfForm, StartDownloadForm, Modal, AnimatedFooterLink, ThankYou } from '../components';\nimport pdfMapper from '../utils/pdfMapper'; // Utils\n\nimport { validateEmail } from '../utils/validator';\nimport { sendEmail } from '../services/apiService';\nimport { useStore } from '../store/useStore';\nimport { USER_SIGNED_UP } from '../store/actionTypes';\nvar ContentWrapper = styled.div.withConfig({\n  displayName: \"research__ContentWrapper\",\n  componentId: \"sc-8mb7la-0\"\n})([\"max-width:1200px;margin:0 auto;padding:0 20px;margin-bottom:100px;\"]);\nexport default (function () {\n  var _useState = useState(''),\n      pdfForm = _useState[0],\n      setPdfForm = _useState[1];\n\n  var _useState2 = useState(false),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      emailSent = _useState3[0],\n      setEmailSent = _useState3[1];\n\n  var _useState4 = useState(false),\n      hasError = _useState4[0],\n      setHasError = _useState4[1];\n\n  var _useState5 = useState({\n    firstName: '',\n    company: '',\n    email: ''\n  }),\n      form = _useState5[0],\n      setFormValues = _useState5[1]; // Hooks to save the users form data\n\n\n  var _useStore = useStore(),\n      state = _useStore.state,\n      dispatch = _useStore.dispatch;\n\n  var saveUser = useCallback(function (formValues) {\n    return dispatch({\n      type: USER_SIGNED_UP,\n      payload: formValues\n    });\n  }, [dispatch]);\n\n  var updateField = function updateField(e) {\n    setFormValues(_objectSpread({}, form, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var onSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return sendEmail(form);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.error) {\n                setHasError(true);\n              } else {\n                // Save user form to store\n                saveUser({\n                  name: form.firstName,\n                  company: form.company,\n                  email: form.email\n                });\n                setEmailSent(true);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setHasError(true);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function onSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onModalClose = function onModalClose() {\n    setModalVisible(false);\n    setEmailSent(false);\n  };\n\n  var openModal = function openModal(researchForm) {\n    setModalVisible(true);\n    setPdfForm(pdfMapper[researchForm]);\n  };\n\n  var isDisabled = form.firstName === '' || !validateEmail(form.email);\n  return __jsx(Layout, null, __jsx(Landing, null), __jsx(Modal, {\n    modalVisible: modalVisible,\n    onRequestClose: onModalClose\n  }, !emailSent && !hasError && !state.user && __jsx(ResearchPdfForm, {\n    firstName: form.firstName,\n    company: form.company,\n    email: form.email,\n    onChange: updateField,\n    isDisabled: isDisabled,\n    onRequestClose: onModalClose,\n    onSubmit: onSubmit,\n    pdfForm: pdfForm\n  }), !emailSent && !hasError && state.user && __jsx(StartDownloadForm, {\n    onRequestClose: onModalClose,\n    pdfForm: pdfForm,\n    onSubmit: function onSubmit() {\n      return setEmailSent(true);\n    }\n  }), emailSent && !hasError && __jsx(ThankYou, {\n    description: \"Your download should start automatically. Enjoy!\",\n    footerMessage: \"Back to research\",\n    href: \"/research\",\n    onClick: onModalClose\n  })), __jsx(ContentWrapper, null, __jsx(Research, {\n    onClick: openModal\n  }), __jsx(WhitePaper, {\n    onClick: openModal\n  }), __jsx(CaseStudies, {\n    onClick: openModal\n  }), __jsx(Survey, {\n    onClick: openModal\n  }), __jsx(AnimatedFooterLink, {\n    message: \"Back to home\",\n    href: \"/\"\n  })), __jsx(ContactFooter, null));\n});","map":null,"metadata":{},"sourceType":"module"}