{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/andrewnguyen/Desktop/dev/market-data-company/pages/contact.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Layout, ThankYou, ContactForm } from '../components';\nimport { Landing } from '../sections/contact-section';\nimport { validateEmail } from '../utils/validator';\nimport { useStore } from '../store/useStore';\nimport { USER_SIGNED_UP } from '../store/actionTypes';\nimport { sendEmail } from '../services/apiService';\nimport styled from 'styled-components';\nconst ContentWrapper = styled.div.withConfig({\n  displayName: \"contact__ContentWrapper\",\n  componentId: \"sc-1jz255m-0\"\n})([\"padding:0 20px;margin-bottom:100px;margin-top:-80px;display:flex;flex-direction:column;align-items:center;flex:1;z-index:0;min-height:640px;\"]);\nconst ThankYouWrapper = styled.div.withConfig({\n  displayName: \"contact__ThankYouWrapper\",\n  componentId: \"sc-1jz255m-1\"\n})([\"display:flex;flex-direction:column;flex:1;min-height:500px;margin:0 40px;\"]);\nexport default (() => {\n  const {\n    0: form,\n    1: setFormValues\n  } = useState({\n    firstName: '',\n    company: '',\n    email: '',\n    message: ''\n  });\n  const {\n    0: emailSent,\n    1: setEmailSent\n  } = useState(false);\n  const {\n    0: hasError,\n    1: setHasError\n  } = useState(false);\n  const {\n    0: formError,\n    1: setFormError\n  } = useState(false);\n  const {\n    dispatch\n  } = useStore();\n  const saveUser = useCallback(formValues => dispatch({\n    type: USER_SIGNED_UP,\n    payload: formValues\n  }), [dispatch]);\n  const inputError = !form.firstName || !form.email || !validateEmail(form.email);\n  useEffect(() => {\n    if (formError && !inputError) {\n      setFormError(false);\n    }\n  }, [form]);\n\n  const updateField = e => {\n    setFormValues(_objectSpread({}, form, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    if (inputError) {\n      setFormError(true);\n      return;\n    }\n\n    try {\n      saveUser({\n        name: form.name,\n        email: form.email,\n        company: form.company\n      });\n      const res = await sendEmail(form);\n\n      if (res.success) {\n        setEmailSent(true);\n      }\n    } catch (err) {\n      setHasError(true);\n    }\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, !emailSent && !hasError && __jsx(React.Fragment, null, __jsx(Landing, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), __jsx(ContentWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(ContactForm, {\n    firstName: form.firstName,\n    company: form.company,\n    email: form.email,\n    message: form.message,\n    onChange: updateField,\n    onSubmit: onSubmit,\n    isError: formError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))), emailSent && !hasError && __jsx(ThankYouWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(ThankYou, {\n    description: `We’ll reply to you at ${form.email} as soon as possible.`,\n    footerMessage: \"Back to home\",\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/andrewnguyen/Desktop/dev/market-data-company/pages/contact.js"],"names":["React","useState","useEffect","useCallback","Layout","ThankYou","ContactForm","Landing","validateEmail","useStore","USER_SIGNED_UP","sendEmail","styled","ContentWrapper","div","ThankYouWrapper","form","setFormValues","firstName","company","email","message","emailSent","setEmailSent","hasError","setHasError","formError","setFormError","dispatch","saveUser","formValues","type","payload","inputError","updateField","e","target","name","value","onSubmit","res","success","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,eAA9C;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,oJAApB;AAaA,MAAMC,eAAe,GAAGH,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,iFAArB;AAQA,gBAAe,MAAM;AACpB,QAAM;AAAA,OAACE,IAAD;AAAA,OAAOC;AAAP,MAAwBhB,QAAQ,CAAC;AACtCiB,IAAAA,SAAS,EAAE,EAD2B;AAEtCC,IAAAA,OAAO,EAAE,EAF6B;AAGtCC,IAAAA,KAAK,EAAE,EAH+B;AAItCC,IAAAA,OAAO,EAAE;AAJ6B,GAAD,CAAtC;AAMA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BtB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACuB,QAAD;AAAA,OAAWC;AAAX,MAA0BxB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACyB,SAAD;AAAA,OAAYC;AAAZ,MAA4B1B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAE2B,IAAAA;AAAF,MAAenB,QAAQ,EAA7B;AACA,QAAMoB,QAAQ,GAAG1B,WAAW,CAC1B2B,UAAD,IAAgBF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAErB,cAAR;AAAwBsB,IAAAA,OAAO,EAAEF;AAAjC,GAAD,CADG,EAE3B,CAACF,QAAD,CAF2B,CAA5B;AAKA,QAAMK,UAAU,GACf,CAACjB,IAAI,CAACE,SAAN,IAAmB,CAACF,IAAI,CAACI,KAAzB,IAAkC,CAACZ,aAAa,CAACQ,IAAI,CAACI,KAAN,CADjD;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIwB,SAAS,IAAI,CAACO,UAAlB,EAA8B;AAC7BN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACD,GAJQ,EAIN,CAACX,IAAD,CAJM,CAAT;;AAMA,QAAMkB,WAAW,GAAIC,CAAD,IAAO;AAC1BlB,IAAAA,aAAa,mBACTD,IADS;AAEZ,OAACmB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFd,OAAb;AAIA,GALD;;AAOA,QAAMC,QAAQ,GAAG,YAAY;AAC5B,QAAIN,UAAJ,EAAgB;AACfN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACA;;AAED,QAAI;AACHE,MAAAA,QAAQ,CAAC;AACRQ,QAAAA,IAAI,EAAErB,IAAI,CAACqB,IADH;AAERjB,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFJ;AAGRD,QAAAA,OAAO,EAAEH,IAAI,CAACG;AAHN,OAAD,CAAR;AAMA,YAAMqB,GAAG,GAAG,MAAM7B,SAAS,CAACK,IAAD,CAA3B;;AACA,UAAIwB,GAAG,CAACC,OAAR,EAAiB;AAChBlB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD,KAXD,CAWE,OAAOmB,GAAP,EAAY;AACbjB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD,GApBD;;AAsBA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACH,SAAD,IAAc,CAACE,QAAf,IACA,4BACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,WAAD;AACC,IAAA,SAAS,EAAER,IAAI,CAACE,SADjB;AAEC,IAAA,OAAO,EAAEF,IAAI,CAACG,OAFf;AAGC,IAAA,KAAK,EAAEH,IAAI,CAACI,KAHb;AAIC,IAAA,OAAO,EAAEJ,IAAI,CAACK,OAJf;AAKC,IAAA,QAAQ,EAAEa,WALX;AAMC,IAAA,QAAQ,EAAEK,QANX;AAOC,IAAA,OAAO,EAAEb,SAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD,CAFF,EAiBEJ,SAAS,IAAI,CAACE,QAAd,IACA,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,QAAD;AACC,IAAA,WAAW,EAAG,yBAAwBR,IAAI,CAACI,KAAM,uBADlD;AAEC,IAAA,aAAa,EAAC,cAFf;AAGC,IAAA,IAAI,EAAC,GAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAlBF,CADD;AA6BA,CAnFD","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\n\nimport { Layout, ThankYou, ContactForm } from '../components'\n\nimport { Landing } from '../sections/contact-section'\n\nimport { validateEmail } from '../utils/validator'\nimport { useStore } from '../store/useStore'\nimport { USER_SIGNED_UP } from '../store/actionTypes'\n\nimport { sendEmail } from '../services/apiService'\n\nimport styled from 'styled-components'\n\nconst ContentWrapper = styled.div`\n\tpadding: 0 20px;\n\tmargin-bottom: 100px;\n\tmargin-top: -80px;\n\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tflex: 1;\n\tz-index: 0;\n\tmin-height: 640px;\n`\n\nconst ThankYouWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tmin-height: 500px;\n\tmargin: 0 40px;\n`\n\nexport default () => {\n\tconst [form, setFormValues] = useState({\n\t\tfirstName: '',\n\t\tcompany: '',\n\t\temail: '',\n\t\tmessage: ''\n\t})\n\tconst [emailSent, setEmailSent] = useState(false)\n\tconst [hasError, setHasError] = useState(false)\n\tconst [formError, setFormError] = useState(false)\n\tconst { dispatch } = useStore()\n\tconst saveUser = useCallback(\n\t\t(formValues) => dispatch({ type: USER_SIGNED_UP, payload: formValues }),\n\t\t[dispatch]\n\t)\n\n\tconst inputError =\n\t\t!form.firstName || !form.email || !validateEmail(form.email)\n\n\tuseEffect(() => {\n\t\tif (formError && !inputError) {\n\t\t\tsetFormError(false)\n\t\t}\n\t}, [form])\n\n\tconst updateField = (e) => {\n\t\tsetFormValues({\n\t\t\t...form,\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\n\tconst onSubmit = async () => {\n\t\tif (inputError) {\n\t\t\tsetFormError(true)\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tsaveUser({\n\t\t\t\tname: form.name,\n\t\t\t\temail: form.email,\n\t\t\t\tcompany: form.company\n\t\t\t})\n\n\t\t\tconst res = await sendEmail(form)\n\t\t\tif (res.success) {\n\t\t\t\tsetEmailSent(true)\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetHasError(true)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t{!emailSent && !hasError && (\n\t\t\t\t<>\n\t\t\t\t\t<Landing />\n\t\t\t\t\t<ContentWrapper>\n\t\t\t\t\t\t<ContactForm\n\t\t\t\t\t\t\tfirstName={form.firstName}\n\t\t\t\t\t\t\tcompany={form.company}\n\t\t\t\t\t\t\temail={form.email}\n\t\t\t\t\t\t\tmessage={form.message}\n\t\t\t\t\t\t\tonChange={updateField}\n\t\t\t\t\t\t\tonSubmit={onSubmit}\n\t\t\t\t\t\t\tisError={formError}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ContentWrapper>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{emailSent && !hasError && (\n\t\t\t\t<ThankYouWrapper>\n\t\t\t\t\t<ThankYou\n\t\t\t\t\t\tdescription={`We’ll reply to you at ${form.email} as soon as possible.`}\n\t\t\t\t\t\tfooterMessage=\"Back to home\"\n\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t/>\n\t\t\t\t</ThankYouWrapper>\n\t\t\t)}\n\t\t</Layout>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}