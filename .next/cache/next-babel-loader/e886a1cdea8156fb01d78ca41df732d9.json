{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Layout, Modal, ThankYou, ResearchPdfForm, StartDownloadForm, ContactFooter } from '../components';\nimport { Landing, LeaderMarketData, WorkedWith, WhyMdc, Services, Research } from '../sections/home-section';\nimport pdfMapper from '../utils/pdfMapper'; // Utils\n\nimport { validateEmail } from '../utils/validator';\nimport { sendEmail } from '../services/apiService';\nimport { useStore } from '../store/useStore';\nimport { USER_SIGNED_UP } from '../store/actionTypes';\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nconst ContentWrapper = styled.div.withConfig({\n  displayName: \"pages__ContentWrapper\",\n  componentId: \"sc-1cvwks4-0\"\n})([\"max-width:1200px;margin:0 20px;\", \"\"], breakpoint('tablet')`\n\t\tmargin: 0 120px;\n\t`);\n\nconst Home = () => {\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const {\n    0: hasError,\n    1: setHasError\n  } = useState(false);\n  const {\n    0: emailSent,\n    1: setEmailSent\n  } = useState(false);\n  const {\n    0: pdfForm,\n    1: setPdfForm\n  } = useState('');\n  const {\n    0: form,\n    1: setFormValues\n  } = useState({\n    firstName: '',\n    company: '',\n    email: ''\n  }); // Hooks to save the users form data\n\n  const {\n    state,\n    dispatch\n  } = useStore();\n  const saveUser = useCallback(formValues => dispatch({\n    type: USER_SIGNED_UP,\n    payload: formValues\n  }), [dispatch]);\n\n  const onSubmit = async () => {\n    try {\n      const res = await sendEmail(form);\n\n      if (res.error) {\n        setHasError(true);\n      } else {\n        // Save user form to store\n        saveUser({\n          name: form.firstName,\n          company: form.company,\n          email: form.email\n        });\n        setEmailSent(true);\n      }\n    } catch (err) {\n      setHasError(true);\n    }\n  };\n\n  const updateField = e => {\n    setFormValues(_objectSpread({}, form, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onModalClose = () => {\n    setModalVisible(false);\n    setEmailSent(false);\n  };\n\n  const openModal = researchForm => {\n    setModalVisible(true);\n    setPdfForm(pdfMapper[researchForm]);\n  };\n\n  const isDisabled = !form.firstName && !validateEmail(form.email);\n  return __jsx(Layout, null, __jsx(Landing, null), __jsx(Modal, {\n    modalVisible: modalVisible,\n    onRequestClose: onModalClose\n  }, !emailSent && !hasError && !state.user && __jsx(ResearchPdfForm, {\n    firstName: form.firstName,\n    company: form.company,\n    email: form.email,\n    onChange: updateField,\n    isDisabled: isDisabled,\n    onRequestClose: onModalClose,\n    onSubmit: onSubmit,\n    pdfForm: pdfForm\n  }), !emailSent && !hasError && state.user && __jsx(StartDownloadForm, {\n    onRequestClose: onModalClose,\n    pdfForm: pdfForm,\n    onSubmit: () => setEmailSent(true)\n  }), emailSent && !hasError && __jsx(ThankYou, {\n    description: \"Your download should start automatically. Enjoy!\",\n    footerMessage: \"Back to research\",\n    href: \"/research\",\n    onClick: onModalClose\n  })), __jsx(ContentWrapper, null, __jsx(LeaderMarketData, null), __jsx(WorkedWith, null), __jsx(WhyMdc, null), __jsx(Services, null), __jsx(Research, {\n    onClick: openModal\n  })), __jsx(ContactFooter, null));\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}