{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/warre/dev/flatiron/projects/market-data-company/pages/_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document'; // Import styled components ServerStyleSheet\n\nimport { ServerStyleSheet } from 'styled-components';\nimport GlobalStyles from '../styles/GlobalStyles';\nexport default class MyDocument extends Document {\n  componentDidMount() {\n    const script = document.createElement('script');\n    script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js\";\n    script.async = true;\n    script.innerHTML = JSON.stringify({\n      \"symbols\": [{\n        \"proName\": \"FOREXCOM:SPXUSD\",\n        \"title\": \"S&P 500\"\n      }, {\n        \"proName\": \"FOREXCOM:NSXUSD\",\n        \"title\": \"Nasdaq 100\"\n      }, {\n        \"proName\": \"FX_IDC:EURUSD\",\n        \"title\": \"EUR/USD\"\n      }, {\n        \"proName\": \"BITSTAMP:BTCUSD\",\n        \"title\": \"BTC/USD\"\n      }, {\n        \"proName\": \"BITSTAMP:ETHUSD\",\n        \"title\": \"ETH/USD\"\n      }],\n      \"showSymbolLogo\": true,\n      \"colorTheme\": \"dark\",\n      \"isTransparent\": false,\n      \"displayMode\": \"adaptive\",\n      \"locale\": \"en\"\n    });\n\n    this._ref.current.appendChild(script);\n  }\n\n  static getInitialProps({\n    renderPage\n  }) {\n    // Step 1: Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet(); // Step 2: Retrieve styles from components in the page\n\n    const page = renderPage(App => props => sheet.collectStyles(__jsx(App, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }\n    })))); // Step 3: Extract the styles as <style> tags\n\n    const styleTags = sheet.getStyleElement(); // Step 4: Pass styleTags as a prop\n\n    return _objectSpread(_objectSpread({}, page), {}, {\n      styleTags\n    });\n  }\n\n  render() {\n    return __jsx(Html, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }, \"Market Data Company\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }\n    }), __jsx(\"link\", {\n      rel: \"icon\",\n      type: \"image/png\",\n      href: \"/static/images/mdc_favicon.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }), this.props.styleTags), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      class: \"tradingview-widget-container\",\n      ref: this._ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }\n    }, __jsx(\"div\", {\n      class: \"tradingview-widget-container__widget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }), __jsx(\"div\", {\n      class: \"tradingview-widget-copyright\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, __jsx(\"a\", {\n      href: \"https://www.tradingview.com\",\n      rel: \"noreferrer\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 49\n      }\n    }, __jsx(\"span\", {\n      class: \"blue-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 120\n      }\n    }, \"Ticker Tape\")), \" by TradingView\")), __jsx(GlobalStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }), __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Users/warre/dev/flatiron/projects/market-data-company/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","GlobalStyles","MyDocument","componentDidMount","script","document","createElement","src","async","innerHTML","JSON","stringify","_ref","current","appendChild","getInitialProps","renderPage","sheet","page","App","props","collectStyles","styleTags","getStyleElement","render"],"mappings":"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","sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document'\n// Import styled components ServerStyleSheet\nimport { ServerStyleSheet } from 'styled-components'\nimport GlobalStyles from '../styles/GlobalStyles'\n\nexport default class MyDocument extends Document {\n\n\n\tcomponentDidMount() {\n\t\tconst script = document.createElement('script')\n\t\tscript.src = \"https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js\"\n\t\tscript.async = true\n\t\tscript.innerHTML = JSON.stringify({\n\t\t\t\"symbols\": [\n\t\t\t\t{\n\t\t\t\t\t\"proName\": \"FOREXCOM:SPXUSD\",\n\t\t\t\t\t\"title\": \"S&P 500\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"proName\": \"FOREXCOM:NSXUSD\",\n\t\t\t\t\t\"title\": \"Nasdaq 100\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"proName\": \"FX_IDC:EURUSD\",\n\t\t\t\t\t\"title\": \"EUR/USD\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"proName\": \"BITSTAMP:BTCUSD\",\n\t\t\t\t\t\"title\": \"BTC/USD\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"proName\": \"BITSTAMP:ETHUSD\",\n\t\t\t\t\t\"title\": \"ETH/USD\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"showSymbolLogo\": true,\n\t\t\t\"colorTheme\": \"dark\",\n\t\t\t\"isTransparent\": false,\n\t\t\t\"displayMode\": \"adaptive\",\n\t\t\t\"locale\": \"en\"\n\t\t})\n\t\tthis._ref.current.appendChild(script)\n\t}\n\n\tstatic getInitialProps({ renderPage }) {\n\t\t// Step 1: Create an instance of ServerStyleSheet\n\t\tconst sheet = new ServerStyleSheet()\n\n\t\t// Step 2: Retrieve styles from components in the page\n\t\tconst page = renderPage((App) => (props) =>\n\t\t\tsheet.collectStyles(<App {...props} />)\n\t\t)\n\n\t\t// Step 3: Extract the styles as <style> tags\n\t\tconst styleTags = sheet.getStyleElement()\n\n\t\t// Step 4: Pass styleTags as a prop\n\t\treturn { ...page, styleTags }\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Html>\n\t\t\t\t<Head>\n\t\t\t\t\t<title>Market Data Company</title>\n\t\t\t\t\t<meta\n\t\t\t\t\t\tname=\"viewport\"\n\t\t\t\t\t\tcontent=\"width=device-width, initial-scale=1.0\"\n\t\t\t\t\t/>\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"icon\"\n\t\t\t\t\t\ttype=\"image/png\"\n\t\t\t\t\t\thref=\"/static/images/mdc_favicon.png\"\n\t\t\t\t\t/>\n\t\t\t\t\t<link\n\t\t\t\t\t\trel=\"stylesheet\"\n\t\t\t\t\t\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css\"\n\t\t\t\t\t/>\n\t\t\t\t\t{this.props.styleTags}\n\t\t\t\t</Head>\n\t\t\t\t<body>\n\t\t\t\t\t<div class=\"tradingview-widget-container\" ref={this._ref}>\n\t\t\t\t\t\t<div class=\"tradingview-widget-container__widget\"></div>\n\t\t\t\t\t\t<div class=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com\" rel=\"noreferrer\" target=\"_blank\"><span class=\"blue-text\">Ticker Tape</span></a> by TradingView</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<GlobalStyles />\n\t\t\t\t\t<Main />\n\t\t\t\t\t<NextScript />\n\t\t\t\t</body>\n\t\t\t</Html>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}