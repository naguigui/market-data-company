{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Layout, ThankYou, ContactForm } from '../components';\nimport { Landing } from '../sections/contact-section';\nimport { validateEmail } from '../utils/validator';\nimport { useStore } from '../store/useStore';\nimport { USER_SIGNED_UP } from '../store/actionTypes';\nimport { sendEmail } from '../services/apiService';\nimport styled from 'styled-components';\nconst ContentWrapper = styled.div.withConfig({\n  displayName: \"contact__ContentWrapper\",\n  componentId: \"sc-1jz255m-0\"\n})([\"padding:0 20px;margin-bottom:100px;margin-top:-80px;display:flex;flex-direction:column;align-items:center;flex:1;z-index:0;min-height:640px;\"]);\nconst ThankYouWrapper = styled.div.withConfig({\n  displayName: \"contact__ThankYouWrapper\",\n  componentId: \"sc-1jz255m-1\"\n})([\"display:flex;flex-direction:column;flex:1;min-height:500px;margin:0 40px;\"]);\nexport default (() => {\n  const {\n    0: form,\n    1: setFormValues\n  } = useState({\n    firstName: '',\n    company: '',\n    email: '',\n    message: ''\n  });\n  const {\n    0: emailSent,\n    1: setEmailSent\n  } = useState(false);\n  const {\n    0: hasError,\n    1: setHasError\n  } = useState(false);\n  const {\n    0: formError,\n    1: setFormError\n  } = useState(false);\n  const {\n    dispatch\n  } = useStore();\n  const saveUser = useCallback(formValues => dispatch({\n    type: USER_SIGNED_UP,\n    payload: formValues\n  }), [dispatch]);\n  const inputError = !form.firstName || !form.email || !validateEmail(form.email);\n  useEffect(() => {\n    if (formError && !inputError) {\n      setFormError(false);\n    }\n  }, [form]);\n\n  const updateField = e => {\n    setFormValues(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = async () => {\n    if (inputError) {\n      setFormError(true);\n      return;\n    }\n\n    try {\n      saveUser({\n        name: form.name,\n        email: form.email,\n        company: form.company\n      });\n      const res = await sendEmail(form);\n\n      if (res.success) {\n        setEmailSent(true);\n      }\n    } catch (err) {\n      setHasError(true);\n    }\n  };\n\n  return __jsx(Layout, null, !emailSent && !hasError && __jsx(React.Fragment, null, __jsx(Landing, null), __jsx(ContentWrapper, null, __jsx(ContactForm, {\n    firstName: form.firstName,\n    company: form.company,\n    email: form.email,\n    message: form.message,\n    onChange: updateField,\n    onSubmit: onSubmit,\n    isError: formError\n  }))), emailSent && !hasError && __jsx(ThankYouWrapper, null, __jsx(ThankYou, {\n    description: `Weâ€™ll reply to you at ${form.email} as soon as possible.`,\n    footerMessage: \"Back to home\",\n    href: \"/\"\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}