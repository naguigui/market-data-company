{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ThemeProvider } from 'styled-components';\nimport theme from '../assets/theme';\nimport GlobalStyles from '../styles/GlobalStyles';\nimport { StoreProvider } from '../store/useStore';\nimport analyticsService from '../services/analyticsService';\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentRoute: this.props.router.route\n    });\n  }\n\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.currentRoute !== this.props.router.route) {\n      this.setState({\n        currentRoute: this.props.router.route\n      }, () => {\n        analyticsService.trackPage(this.state.currentRoute);\n      });\n    }\n  }\n  /**\n   * Initializes GA if has not been initialized yet\n   */\n\n\n  componentDidMount() {\n    const {\n      currentRoute\n    } = this.state;\n\n    if (!window.GA_INITIALIZED) {\n      analyticsService.initialize();\n      window.GA_INITIALIZED = true;\n    }\n\n    analyticsService.trackPage(currentRoute);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Container, null, __jsx(StoreProvider, null, __jsx(GlobalStyles, null), __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(Component, pageProps))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}